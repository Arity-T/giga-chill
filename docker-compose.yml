services:
  postgres:
    image: postgres:17-alpine
    container_name: gigachill-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: 
      - gigachill-network

  builder:
    build:
      context: backend
      dockerfile: Dockerfile.builder
    image: gigachill-builder
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - KEEP_DATABASE=${KEEP_DATABASE}
    volumes:
      - backend-build:/app/build
    networks: 
      - gigachill-network

  backend:
    image: eclipse-temurin:21-jre-jammy
    command: ["java", "-jar", "/app/build/libs/app.jar"]
    depends_on:
      builder:
        condition: service_completed_successfully
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - SERVER_PORT=8081
      - JWT_EXPIRATION=1d
      - BACKEND_PROFILE=${BACKEND_PROFILE}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${BACKEND_HOST_PORT}:8081"
    volumes:
      - backend-build:/app/build
      - gigachill-logs:/app/logs
    networks: 
      - gigachill-network

  frontend:
    build:
      context: frontend
      args:
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
        NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
      additional_contexts:
        openapi: ./openapi
    ports:
      - "${FRONTEND_HOST_PORT}:3000"
    environment:
      - PORT=3000
    networks: 
      - gigachill-network

volumes:
  postgres-data:
  backend-build:
  gigachill-logs:
    name: gigachill-logs
  
networks:
  gigachill-network:
    name: gigachill-network