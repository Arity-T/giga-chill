services:
  db:
    image: postgres
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d # Для начальных миграций
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file: .env
    environment:
      DB_HOST: db
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ./scripts:/app/scripts
      - ./src/main/resources/db/migration:/app/migrations
    command: >
      sh -c "
      echo 'Waiting for database...';
      while ! nc -z db 5432; do sleep 1; done;
      
      echo 'Applying database migrations...';
      ./scripts/apply-migrations.sh;
      
      echo 'Starting application...';
      ./gradlew bootRun
      "

volumes:
  db_data: